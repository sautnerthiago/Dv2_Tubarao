#INCLUDE "MATR440.CH"
#INCLUDE "PROTHEUS.CH"

/*/
�����������������������������������������������������������������������������
�����������������������������������������������������������������������������
�������������������������������������������������������������������������Ŀ��
���Fun��o    � MATRa440  � Autor � Alexandre Inacio Lemes� Data �02/06/2006���
�������������������������������������������������������������������������Ĵ��
���Descri��o � Lista os itens que atingiram o ponto de pedido.            ���
�������������������������������������������������������������������������Ĵ��
���Sintaxe   � MATR440(void)                                              ���
�������������������������������������������������������������������������Ĵ��
��� Uso      � Generico                                                   ���
�������������������������������������������������������������������������Ĵ��
���        ATUALIZACOES SOFRIDAS DESDE A CONSTRU�AO INICIAL.              ���
�������������������������������������������������������������������������Ĵ��
���Programador � Data   � BOPS �  Motivo da Alteracao                     ���
�������������������������������������������������������������������������Ĵ��
���Eduardo Fern�24.07.06�XXXXXX�Inclusao mv_par19 (Seleciona Filiais ?)   ���
��������������������������������������������������������������������������ٱ�
�����������������������������������������������������������������������������
�����������������������������������������������������������������������������
/*/
USER Function TBMATR440()
	Local oReport

	oReport := ReportDef()
	If Isblind()
		oReport:nfontbody:=5
	EndIf
	oReport:PrintDialog()

Return

/*/
	�����������������������������������������������������������������������������
	�����������������������������������������������������������������������������
	�������������������������������������������������������������������������Ŀ��
	���Programa  � ReportDef�Autor  �Alexandre Inacio Lemes �Data  �02/06/2006���
	�������������������������������������������������������������������������Ĵ��
	���Descri��o � Lista os itens que atingiram o ponto de pedido.            ���
	�������������������������������������������������������������������������Ĵ��
	���Parametros� nExp01: nReg = Registro posicionado do SC3 apartir Browse  ���
	�������������������������������������������������������������������������Ĵ��
	���Retorno   � oExpO1: Objeto do relatorio                                ���
	��������������������������������������������������������������������������ٱ�
	�����������������������������������������������������������������������������
	�����������������������������������������������������������������������������
/*/
Static Function ReportDef()

	Local oReport
	Local oSection1
	Local cAliasSB1 := GetNextAlias()

	//��������������������������������������������������������������Ŀ
	//� Variaveis utilizadas para parametros                         �
	//� mv_par01             // Produto de                           �
	//� mv_par02             // Produto ate                          �
	//� mv_par03             // Grupo de                             �
	//� mv_par04             // Grupo ate                            �
	//� mv_par05             // Tipo de                              �
	//� mv_par06             // Tipo ate                             �
	//� mv_par07             // Local de                             �
	//� mv_par08             // Local ate                            �
	//� mv_par09             // Considera Necess Bruta   1 - Sim     � Pto Pedido
	//� mv_par10             // Saldo Neg Considera      1 - Sim     � Lote Economico
	//� mv_par11             // Considera C.Q.           1 - Sim     �
	//� mv_par12             // Cons.Qtd. De 3os.? Sim / Nao         �
	//� mv_par13             // Cons.Qtd. Em 3os.? Sim / Nao         �
	//� mv_par14             // Qtd. PV nao Liberado ?" Subtr/Ignora �
	//� mv_par15             // Descricao completa do produto?       �
	//� mv_par16             // Considera Saldo Armazem de           �
	//� mv_par17             // Considera Saldo Armazem ate          �
	//� mv_par18             // Data limite p/ empenhos              �
	//� mv_par19             // Seleciona Filiais ? (Sim/Nao)        �
	//� mv_par20    		 // Considera Est. Seguranca ?  (Sim/Nao)�
	//����������������������������������������������������������������
	Pergunte("MTR440",.F.)

	//������������������������������������������������������������������������Ŀ
	//�Criacao do componente de impressao                                      �
	//�                                                                        �
	//�TReport():New                                                           �
	//�ExpC1 : Nome do relatorio                                               �
	//�ExpC2 : Titulo                                                          �
	//�ExpC3 : Pergunte                                                        �
	//�ExpB4 : Bloco de codigo que sera executado na confirmacao da impressao  �
	//�ExpC5 : Descricao                                                       �
	//�                                                                        �
	//��������������������������������������������������������������������������
	oReport := TReport():New("MTR440",STR0005,"MTR440",{|oReport| ReportPrint(oReport,cAliasSB1)},STR0001+" "+STR0002) //"Emite uma relacao com os itens em estoque que atingiram o Ponto de Pedido ,sugerindo a quantidade a comprar."
	oReport:SetTotalInLine(.F.)
	oReport:SetTotalText(STR0010) // "TOTAL GERAL A COMPRAR"
	oReport:SetLandscape()
	//������������������������������������������������������������������������Ŀ
	//�Criacao da secao utilizada pelo relatorio                               �
	//�                                                                        �
	//�TRSection():New                                                         �
	//�ExpO1 : Objeto TReport que a secao pertence                             �
	//�ExpC2 : Descricao da se�ao                                              �
	//�ExpA3 : Array com as tabelas utilizadas pela secao. A primeira tabela   �
	//�        sera considerada como principal para a se��o.                   �
	//�ExpA4 : Array com as Ordens do relat�rio                                �
	//�ExpL5 : Carrega campos do SX3 como celulas                              �
	//�        Default : False                                                 �
	//�ExpL6 : Carrega ordens do Sindex                                        �
	//�        Default : False                                                 �
	//�                                                                        �
	//��������������������������������������������������������������������������
	//������������������������������������������������������������������������Ŀ
	//�Criacao da celulas da secao do relatorio                                �
	//�                                                                        �
	//�TRCell():New                                                            �
	//�ExpO1 : Objeto TSection que a secao pertence                            �
	//�ExpC2 : Nome da celula do relat�rio. O SX3 ser� consultado              �
	//�ExpC3 : Nome da tabela de referencia da celula                          �
	//�ExpC4 : Titulo da celula                                                �
	//�        Default : X3Titulo()                                            �
	//�ExpC5 : Picture                                                         �
	//�        Default : X3_PICTURE                                            �
	//�ExpC6 : Tamanho                                                         �
	//�        Default : X3_TAMANHO                                            �
	//�ExpL7 : Informe se o tamanho esta em pixel                              �
	//�        Default : False                                                 �
	//�ExpB8 : Bloco de c�digo para impressao.                                 �
	//�        Default : ExpC2                                                 �
	//�                                                                        �
	//��������������������������������������������������������������������������
	oSection1:= TRSection():New(oReport,STR0030,{"SB1"},/*aOrdem*/) // "Produtos"
	oSection1:SetHeaderPage()

	TRCell():New(oSection1,"B1_COD"  ,"SB1",/*Titulo*/	,/*Picture*/						,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
	TRCell():New(oSection1,"B1_DESC" ,"SB1",/*Titulo*/	,/*Picture*/						,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
	TRCell():New(oSection1,"B1_FABRIC","SB1","FABRICANTE",PesqPict("SB1", "B1_FABRIC"),TamSX3("B1_FABRIC")[1],/*lPixel*/,{|| (cAliasSB1)->B1_FABRIC })
	// TRCell():New(oSection1,"B1_FABRIC","SB1","FABRICANTE"	,PesqPict("SB1", "B1_FABRIC")		,TamSX3("B1_FABRIC")[1],/*lPixel*/,{||RetFldProd((cAliasSB1)->B1_COD,"B1_FABRIC",cAliasSB1)  })
	TRCell():New(oSection1,"B1_TIPO" ,"SB1",STR0042	,/*Picture*/						,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
	TRCell():New(oSection1,"B1_GRUPO","SB1",/*Titulo*/	,/*Picture*/						,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
	TRCell():New(oSection1,"B1_UM"   ,"SB1",STR0043,/*Picture*/						,/*Tamanho*/,/*lPixel*/,/*{|| code-block de impressao }*/)
	TRCell():New(oSection1,"SLDPRV"  ,"   ",STR0019	,PesqPict("SB1", "B1_LE")				,TamSX3("B2_QATU")[1],/*lPixel*/,{|| nSaldo - nPrevis })
	TRCell():New(oSection1,"SALD"    ,"   ","SALDO"	,PesqPict("SB2", "B2_SALPEDI")		,TamSX3("B2_QATU")[1],/*lPixel*/,{|| nSlDaT })
	TRCell():New(oSection1,"MED12M"  ,"   ","MEDIA 12M"	, ,TamSX3("B2_QATU")[1],/*lPixel*/,{|| nMED12M })
	TRCell():New(oSection1,"PREVIS"  ,"   ",STR0020+CRLF+STR0037,PesqPict("SB2","B2_SALPEDI")	,TamSX3("B2_SALPEDI")[1],/*lPixel*/,{|| nPrevis },,,"RIGHT") //"Entrada "##"Prevista"
	TRCell():New(oSection1,"B1_EMIN" ,"SB1",/*Titulo*/	,/*Picture*/						,/*Tamanho*/,/*lPixel*/,{|| RetFldProd((cAliasSB1)->B1_COD,"B1_EMIN",cAliasSB1)},,,"RIGHT")
	TRCell():New(oSection1,"ESTSEG"  ,"   ",STR0021+CRLF+STR0031,PesqPict("SB1", "B1_ESTSEG")			,TamSX3("B1_ESTSEG")[1],/*lPixel*/,{|| nESTSEG },,,"RIGHT") //"Estoque"##"de Seguranca"
	TRCell():New(oSection1,"B1_LE"   ,"SB1",/*Titulo*/	,PesqPict("SB1", "B1_LE")				,/*Tamanho*/,/*lPixel*/,{|| RetFldProd((cAliasSB1)->B1_COD,"B1_LE",cAliasSB1)},,,"RIGHT")
	TRCell():New(oSection1,"B1_TOLER","SB1",/*Titulo*/	,PesqPict("SB1", "B1_LE")				,/*Tamanho*/,/*lPixel*/,{|| RetFldProd((cAliasSB1)->B1_COD,"B1_TOLER",cAliasSB1)},,,"RIGHT")
	TRCell():New(oSection1,"TOLER"   ,"   ",STR0022	,PesqPict("SB1", "B1_LE")				,/*Tamanho*/,/*lPixel*/,{|| 	nToler := (RetFldProd((cAliasSB1)->B1_COD,"B1_LE",cAliasSB1) * RetFldProd((cAliasSB1)->B1_COD,"B1_TOLER",cAliasSB1))/100 })
	TRCell():New(oSection1,"B1_QE"   ,"SB1",STR0040+CRLF+STR0041,PesqPict("SB1", "B1_LE")				,/*Tamanho*/,/*lPixel*/,{|| RetFldProd((cAliasSB1)->B1_COD,"B1_QE",cAliasSB1)},,,"RIGHT") //"Qtde. por "##"Embalagem"
	TRCell():New(oSection1,"QUANT"   ,"   ",STR0023+CRLF+STR0024,PesqPict("SB1", "B1_LE")				,TamSX3("C1_QUANT")[1],/*lPixel*/,{|| nQuant },,,"RIGHT") //"Quantidade"##" a Comprar"
	TRCell():New(oSection1,"VALOR"   ,"   ",STR0032+CRLF+STR0033,TM(0,16)							,TamSX3("B2_VATU1")[1],/*lPixel*/,{|| nQuant * IIf( RetFldProd((cAliasSB1)->B1_COD,"B1_UCOM",cAliasSB1) < (cAliasSB1)->B1_DATREF , RetFldProd((cAliasSB1)->B1_COD,"B1_CUSTD",cAliasSB1) ,RetFldProd((cAliasSB1)->B1_COD,"B1_UPRC",cAliasSB1)) },,,"RIGHT") //"Vlr.Estimado"##" da Compra"
	TRCell():New(oSection1,"TIPOVAL" ,"   ",STR0025	,/*Picture*/						,4,/*lPixel*/,{|| cTipoVal := IIf( RetFldProd((cAliasSB1)->B1_COD,"B1_UCOM",cAliasSB1) < (cAliasSB1)->B1_DATREF , "STD" , "U.CO" ) })
	TRCell():New(oSection1,"DATA"    ,"   ",STR0026+CRLF+STR0036,/*Picture*/						,TamSX3("C1_DATPRF")[1],/*lPixel*/,{|| dData := IIf( RetFldProd((cAliasSB1)->B1_COD,"B1_UCOM",cAliasSB1) < (cAliasSB1)->B1_DATREF,(cAliasSB1)->B1_DATREF, RetFldProd((cAliasSB1)->B1_COD,"B1_UCOM",cAliasSB1)) },,,"CENTER") //"Data de "##"Referencia"
	TRCell():New(oSection1,"VALUNIT" ,"   ",STR0027+CRLF+STR0028,TM(0,14)							,TamSX3("B2_VATU1")[1],/*lPixel*/,{|| nValUnit := IIf( RetFldProd((cAliasSB1)->B1_COD,"B1_UCOM",cAliasSB1) < (cAliasSB1)->B1_DATREF , RetFldProd((cAliasSB1)->B1_COD,"B1_CUSTD",cAliasSB1) ,RetFldProd((cAliasSB1)->B1_COD,"B1_UPRC",cAliasSB1)) },,,"RIGHT") //"Vlr.Unitario"##" da Compra"
	TRCell():New(oSection1,"PRAZO"   ,"   ",STR0034+CRLF+STR0044+CRLF+STR0045,/*Picture*/						,TamSX3("B1_PE")[1],/*lPixel*/,{|| nPrazo := CalcPrazo((cAliasSB1)->B1_COD,nQuant)},,,"RIGHT") // "Prazo Entrega"##" em Dias"
	TRCell():New(oSection1,"FILSB2"  ,"   ",STR0046		,X3Picture("B2_FILIAL")	,TamSX3("B2_FILIAL")[1],/*lPixel*/,{|| cFilSB2 })
	TRCell():New(oSection1,"LOCSB2"  ,"   ",STR0047	,X3Picture("B2_LOCAL")	,TamSX3("B2_LOCAL")[1],/*lPixel*/,{|| cLocSB2 })

	TRFunction():New(oSection1:Cell("VALOR"),NIL,"SUM",/*oBreak*/,,/*cPicture*/,/*uFormula*/,.F.,.T.) //"TOTAL GERAL A COMPRAR"

Return(oReport)

/*/
	�����������������������������������������������������������������������������
	�����������������������������������������������������������������������������
	�������������������������������������������������������������������������Ŀ��
	���Programa  �ReportPrin� Autor �Alexandre Inacio Lemes �Data  �05/06/2006���
	�������������������������������������������������������������������������Ĵ��
	���Descri��o � Lista os itens que atingiram o ponto de pedido.            ���
	�������������������������������������������������������������������������Ĵ��
	���Retorno   �Nenhum                                                      ���
	�������������������������������������������������������������������������Ĵ��
	���Parametros�ExpO1: Objeto Report do Relat�rio                           ���
	��������������������������������������������������������������������������ٱ�
	�����������������������������������������������������������������������������
	�����������������������������������������������������������������������������
/*/
Static Function ReportPrint(oReport,cAliasSB1)

	Local oSection1 := oReport:Section(1)
	Local cLocCQ    := GetMvNNR('MV_CQ','98')
	Local nNeces    := 0
	Local nAuxQuant := 0
	Local nSaldAux	:= 0
	Local nX        := 0
	Local lValidSB1 := .T.
	Local lQtdPrev  := SuperGetMV('MV_QTDPREV')
	Local lArqSBZ   := AllTrim(SuperGetMV("MV_ARQPROD",.F.,"SB1")) == "SBZ"

	Local lMR440QTD := ExistBlock( "MR440QTD" )
	Local lMT170SB1 := ExistBlock( "MT170SB1" )
	Local lMT170Sld := ExistBlock( "MT170SLD" )

	Local lMT170QRY := ExistBlock( "MT170QRY" )
	Local cSelect 	:= ""
	Local cSelectPE := ""

	//��������������������������������������������������������������Ŀ
	//� Variaveis utilizadas para Tratamento da impressao por Filiais�
	//����������������������������������������������������������������
	Local aFilsCalc :={}
	Local nForFilial:= 0
	Local cFilBack  := cFilAnt

	Private cTipoVal := ""
	Private nQuant   := 0
	Private nSaldo   := 0
	Private nSlDaT   := 0 //JV
	Private nValUnit := 0
	Private nValor   := 0
	Private nPrazo   := 0
	Private nToler   := 0
	Private nEstSeg  := 0
	Private nPrevis  := 0
	Private cFilSB2  := ""
	Private cLocSB2  := ""

	// Funcao para a escolha de filiais
	If !IsBlind()
		aFilsCalc:= MatFilCalc( mv_par19 == 1 )
	EndIf

	If !Empty( aFilsCalc ) .OR. IsBlind()

		If IsBlind()
			dbSelectArea("SM0")
			dbSeek(cEmpAnt+cFilAnt)
			aFilsCalc := {{.T.,SM0->M0_CODFIL,SM0->M0_FILIAL,SM0->M0_CGC}}
		Endif

		For nForFilial := 1 to Len(aFilsCalc)

			If aFilsCalc[nForFilial,1]

				// Altera filial corrente
				cFilAnt := aFilsCalc[nForFilial,2]

				oReport:SetTitle( STR0005 + " - " + aFilsCalc[ nForFilial, 3 ] ) //Titulo do Relatorio

				oReport:EndPage() // Reinicia Paginas

				dbSelectArea("SB1")
				dbSetOrder(1)
				//������������������������������������������������������������������������Ŀ
				//�Filtragem do relat�rio                                                  �
				//��������������������������������������������������������������������������
				MakeSqlExpr(oReport:uParam)

				cSelect := "B1_COD,B1_LE,B1_TOLER,B1_QE,B1_UCOM,B1_DATREF,B1_UCOM,B1_CUSTD,B1_UPRC,B1_ESTFOR,B1_ESTSEG,B1_EMIN, B1_FABRIC FROM " + RetSqlName("SB1")+" SB1 "
				If lArqSBZ
					cSelect += "LEFT JOIN "  + RetSqlName("SBZ")+" SBZ ON SBZ.BZ_FILIAL = '"+xFilial("SBZ")+"'  AND	"
					cSelect += "SB1.B1_COD = SBZ.BZ_COD AND  SBZ.D_E_L_E_T_ = ' ' "
				EndIf
				cSelect += "WHERE SB1.B1_FILIAL ='"+xFilial("SB1")+"' AND "
				cSelect += "SB1.B1_COD    >='" +mv_Par01+"' AND SB1.B1_COD <='"   +mv_Par02+"' AND "
				cSelect += "SB1.B1_GRUPO  >='" +mv_Par03+"' AND SB1.B1_GRUPO <='" +mv_Par04+"' AND "
				cSelect += "SB1.B1_TIPO   >='" +mv_Par05+"' AND SB1.B1_TIPO <='"  +mv_Par06+"' AND "
				//cSelect += "B2_QATU
				If !lArqSBZ
					cSelect += "SB1.B1_LOCPAD >='" +mv_Par07+"' AND SB1.B1_LOCPAD <='"+mv_Par08+"' AND "
				Else
					cSelect += "((SB1.B1_LOCPAD >='" +mv_Par07+"' AND SB1.B1_LOCPAD <= '"+mv_Par08+"' ) OR "
					cSelect += "(SBZ.BZ_LOCPAD >='" +mv_Par07+"' AND SBZ.BZ_LOCPAD <= '"+mv_Par08+"' )) AND "
					If SBZ->(FieldPos("BZ_MSBLQL")) > 0
						cSelect += " "+MATIsNull()+"(SBZ.BZ_MSBLQL,SB1.B1_MSBLQL) <>'1' AND "
					Else
						cSelect += "SB1.B1_MSBLQL <>'1' AND "
					EndIf
				EndIf

				cSelect += "SB1.B1_MSBLQL <>'1' AND "
				cSelect += "SB1.B1_CONTRAT <> 'S' AND SB1.B1_TIPO <> 'BN' AND "
				cSelect += "SB1.D_E_L_E_T_ = ' ' "
				//����������������������������������������������������������������������Ŀ
				//� MT170QRY - Ponto de Entrada p/ manipulacao da Query - filtro em SB1	 �
				//������������������������������������������������������������������������
				If lMT170QRY
					cSelectPE := Execblock('MT170QRY', .F., .F., {"SELECT "+cSelect})
					If ValType(cSelectPE)=='C' .And. AT("SELECT ",cSelectPE) > 0
						//�����������������������������������������������������������������������Ŀ
						//� Devido Embedded SQL, retira-se o SELECT da expressao da query         �
						//�������������������������������������������������������������������������
						cSelect := Substr(cSelectPE,AT("SELECT ",cSelectPE)+7,Len(cSelectPE)-7)
					EndIf
				Endif
				cSelect := "%"+cSelect+"%"

				//��������������������������������������������������������������������Ŀ
				//�Query do relat�rio da secao 1                                       �
				//����������������������������������������������������������������������
				oReport:Section(1):BeginQuery()

				BeginSql Alias cAliasSB1

			    SELECT %Exp:cSelect%

				ORDER BY B1_FABRIC// ORDER BY %Order:SB1% 

				EndSql
				//������������������������������������������������������������������������Ŀ
				//�Metodo EndQuery ( Classe TRSection )                                    �
				//�                                                                        �
				//�Prepara o relat�rio para executar o Embedded SQL.                       �
				//�                                                                        �
				//�ExpA1 : Array com os parametros do tipo Range                           �
				//�                                                                        �
				//��������������������������������������������������������������������������

				oReport:Section(1):EndQuery(/*Array com os parametros do tipo Range*/)


				oReport:SetMeter(SB1->(LastRec()))
				oSection1:Init()

				dbSelectArea(cAliasSB1)
				While !oReport:Cancel() .And. !(cAliasSB1)->(Eof())

					oReport:IncMeter()

					If oReport:Cancel()
						Exit
					EndIf

					If IsProdMod((cAliasSB1)->B1_COD)
						(cAliasSB1)->(dbSkip())
						Loop
					EndIf

					//�����������������������������������������������������������Ŀ
					//� MT170SB1 - Ponto de entrada para validar o produto        �
					//�������������������������������������������������������������
					If lMT170SB1
						lValidSB1 := ExecBlock("MT170SB1",.F.,.F.,{cAliasSB1})
						If ValType( lValidSB1 ) == "L" .And. !lValidSB1
							(cAliasSB1)->(dbSkip())
							Loop
						EndIf
					EndIf

					//�������������������������������������������������Ŀ
					//� Calcula o saldo atual de todos os almoxarifados �
					//���������������������������������������������������
					dbSelectArea("SB2")
					dbSetOrder(1)
					dbSeek( xFilial("SB2") + (cAliasSB1)->B1_COD )

					nMED12M := MNTMED((cAliasSB1)->B1_COD, dDataBase)

					While !Eof() .And. SB2->B2_FILIAL + SB2->B2_COD == xFilial("SB2") + (cAliasSB1)->B1_COD

						If ( SB2->B2_LOCAL >= mv_par16 .And. SB2->B2_LOCAL <= mv_par17 ) .And. !( SB2->B2_LOCAL == cLocCQ .And. mv_par11 == 2 )
							nSlDaT := SB2->B2_QATU //(SaldoSB2(Nil,Nil,If(Empty(mv_par18),dDataBase,mv_par18),mv_par12==1,mv_par13==1)+SB2->B2_SALPEDI+SB2->B2_QACLASS+IIF(lQtdPrev="S",B2_SALPPRE,0))
							nSaldo +=(SaldoSB2(Nil,Nil,If(Empty(mv_par18),dDataBase,mv_par18),mv_par12==1,mv_par13==1)+SB2->B2_SALPEDI+SB2->B2_QACLASS+IIF(lQtdPrev="S",B2_SALPPRE,0))
							If mv_par14 == 1
								nSaldo -= SB2->B2_QPEDVEN
							EndIf
							nPrevis += SB2->B2_SALPEDI

							cFilSB2  := SB2->B2_FILIAL
							cLocSB2  := SB2->B2_LOCAL
							//����������������������������������������������������������������������Ŀ
							//� MT170SLD - Ponto de Entrada p/ manipulacao do saldo do produto    	 �
							//������������������������������������������������������������������������
							If lMT170Sld
								nSaldAux := ExecBlock("MT170SLD",.F.,.F.,{nSaldo,SB2->B2_COD,SB2->B2_LOCAL})
								If ValType(nSaldAux) == 'N'
									nSaldo := nSaldAux
								EndIf
							Endif

						EndIf

						dbSelectArea("SB2")
						dbSkip()
					EndDo

					nEstSeg := CalcEstSeg( RetFldProd((cAliasSB1)->B1_COD,"B1_ESTFOR",cAliasSB1),cAliasSB1 )

					If mv_par20 == 1
						nSaldo -= nEstSeg
					EndIf

					If (Round(nSaldo,4) <> 0) .Or. (mv_par09 == 1)
						Do Case
						Case ( RetFldProd((cAliasSB1)->B1_COD,"B1_EMIN",cAliasSB1) != 0 .And. MV_PAR09 == 1 )

							If ( mv_par10 == 2 .And. nSaldo < 0 )
								nSaldo -= RetFldProd((cAliasSB1)->B1_COD,"B1_LE",cAliasSB1)
							EndIf

							nNeces := If((nSaldo < 0),Abs(nSaldo)+RetFldProd((cAliasSB1)->B1_COD,"B1_EMIN",cAliasSB1),;
								(If(QtdComp(nSaldo)==QtdComp(RetFldProd((cAliasSB1)->B1_COD,"B1_EMIN",cAliasSB1)),1,0);
								+RetFldProd((cAliasSB1)->B1_COD,"B1_EMIN",cAliasSB1)-nSaldo))

							//-- Soma 1 na quantidade da necessidade:
							//-- Ex: Ponto Pedido = 10 e Estoque = 9, ao inves de gerar 2 SCs de 1 pc ira gera 1 SC de 2 pcs (para sair do ponto de pedido)
							If nSaldo <  QtdComp(RetFldProd((cAliasSB1)->B1_COD,"B1_EMIN",cAliasSB1)) //-- Se o Saldo for menor que o Ponto do Pedido
								nNeces += 1
							EndIf

						Case ( RetFldProd((cAliasSB1)->B1_COD,"B1_EMIN",cAliasSB1) != 0 .And. MV_PAR09 == 2 )

							If ( mv_par10 == 2 .And. nSaldo < 0 )
								nSaldo -= RetFldProd((cAliasSB1)->B1_COD,"B1_LE",cAliasSB1)
							EndIf

							nNeces := If((nSaldo < 0),Abs(nSaldo),;
								(If(QtdComp(nSaldo) ==  QtdComp(RetFldProd((cAliasSB1)->B1_COD,"B1_EMIN",cAliasSB1)),1,0);
								+RetFldProd((cAliasSB1)->B1_COD,"B1_EMIN",cAliasSB1)-nSaldo))

							//-- Soma 1 na quantidade da necessidade:
							//-- Ex: Ponto Pedido = 10 e Estoque = 9, ao inves de gerar 2 SCs de 1 pc ira gera 1 SC de 2 pcs (para sair do ponto de pedido)
							If nSaldo <  QtdComp(RetFldProd((cAliasSB1)->B1_COD,"B1_EMIN",cAliasSB1)) //-- Se o Saldo for menor que o Ponto do Pedido
								nNeces += 1
							EndIf

						Case ( RetFldProd((cAliasSB1)->B1_COD,"B1_LE",cAliasSB1) != 0 .And. (nSaldo < 0  .or. mv_par09 == 2) )

							If ( mv_par10 == 2 .And. nSaldo < 0 )
								nNeces := Abs(nSaldo)+RetFldProd((cAliasSB1)->B1_COD,"B1_LE",cAliasSB1)
							Else
								nNeces := If( Abs(nSaldo)<RetFldProd((cAliasSB1)->B1_COD,"B1_LE",cAliasSB1),RetFldProd((cAliasSB1)->B1_COD,"B1_LE",cAliasSB1),if(nSaldo<0,Abs(nSaldo),0))
							EndIf

						OtherWise

							nNeces := IF(mv_par09 == 1,IIf(nSaldo<0,Abs(nSaldo)+1,0),0)
						EndCase
					Else
						If RetFldProd((cAliasSB1)->B1_COD,"B1_EMIN",cAliasSB1) != 0
							nNeces := ( RetFldProd((cAliasSB1)->B1_COD,"B1_EMIN",cAliasSB1) )
							nNeces += 1
						Else
							nNeces := 0
						EndIf
					EndIf

					If nNeces > 0
						//�����������������������������������������������������������Ŀ
						//� Verifica se o produto tem estrutura                       �
						//�������������������������������������������������������������
						dbSelectArea("SG1")
						If dbSeek( xFilial("SG1")+(cAliasSB1)->B1_COD )
							aQtdes := CalcLote((cAliasSB1)->B1_COD,nNeces,"F")
						Else
							aQtdes := CalcLote((cAliasSB1)->B1_COD,nNeces,"C")
						Endif
						For nX := 1 to Len(aQtdes)
							nQuant += aQtdes[nX]
						Next
					EndIf

					dbSelectArea(cAliasSB1)
					dbSetOrder(oSection1:GetIdxOrder())

					If lMR440QTD
						nAuxQuant := Execblock("MR440QTD",.f.,.f.,NQUANT)
						If ValType(nAuxQuant) == "N"
							nQuant := nAuxQuant
						EndIf
					EndIf

					If nPrevis < RetFldProd((cAliasSB1)->B1_COD, "B1_EMIN", cAliasSB1) .And. nQuant > 0
						oSection1:PrintLine()
					EndIf


					nSaldo := 0
					nQuant := 0
					nPrevis:= 0
					nNeces := 0

					dbSelectArea(cAliasSB1)
					dbSkip()

				EndDo

			EndIf

		Next nForFilial

		oSection1:Finish()

	EndIf

	// Restaura filial original apos processamento
	cFilAnt:=cFilBack

Return NIL

Static Function MNTMED( _COD, dDatB)
	Local nRet   := 0

	cData01 := DtoS( (dDatB - 365))
	cData02 := DtoS(dDatB)
	
	cQueryTMP := " SELECT SUM(D2_QUANT) AS QTD " 
	cQueryTMP += " FROM " + RetSqlName("SD2") + " "
	cQueryTMP += " WHERE D2_FILIAL = '"+FWxFilial("SD2")+"' "
    cQueryTMP += " AND D2_COD = '"+_COD+"' "
    cQueryTMP += " AND D2_EMISSAO BETWEEN '"+cData01+"' AND '"+cData02+"' "
	cQueryTMP += " AND D_E_L_E_T_ = ' '
	cQueryTMP := ChangeQuery(cQueryTMP)
	cAlias := MPSysOpenQuery(cQueryTMP)

    nRet :=  (cAlias)->QTD / 12
    (cAlias)->(DbCloseArea())

Return nRet
